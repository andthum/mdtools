# 1.) Format and Lint code
# 2.) Test code
#
# See:
# https://docs.github.com/en/actions/guides/building-and-testing-python

name: Tests

on:
  push:
    branches: [main, develop]
    tags: ["v[0-9].[0-9].[0-9]*"]
  pull_request:
    # Run this workflow on every PR, except for PRs that only changes
    # files from the following ignore list.
    paths-ignore:
      - ./.github/*template**
      - ./.github/*TEMPLATE**
      - ./.readthedocs.yaml
      - ./LICENSE.txt
      - ./*.rst
      - "**/README"
      - "**/README.*"
      - "**/*.md"
      - "**/*.eps"
      - "**/*.EPS"
      - "**/*.jpg"
      - "**/*.JPG"
      - "**/*.jpeg"
      - "**/*.JPEG"
      - "**/*.pdf"
      - "**/*.PDF"
      - "**/*.png"
      - "**/*.PNG"
      - "**/*.svg"
      - "**/*.SVG"
      - "**/*.tif"
      - "**/*.TIF"
      - "**/*.tiff"
      - "**/*.TIFF"
  release:
    types: [published, created, edited, prereleased, released]

jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Export ${HOME}/.local/bin to ${PATH}
      # Executable Python binaries are ususally stored there
      run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
    - name: Get pip cache dir
      # pip's cache path depends on the operating system, see
      # https://github.com/actions/cache/blob/main/examples.md#python---pip
      # This requires pip >=20.1
      id: pip-cache
      run: |
        python -m pip install --user --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Create/Restore cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.pip-cache.outputs.dir }}/**
          ./.cache/black/**
          ~/.cache/black/**
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}
          ${{ runner.os }}
    - name: Install/Upgrade setuptools and wheel
      run: python -m pip install --user --upgrade setuptools wheel
    - name: Install/Upgrade black
      run: python -m pip install --user --upgrade black
    - name: Check code formatting with black
      # TODO: The --include flag should be removed once all files are
      # formatted with black.  But as long as this is not the case, only
      # check those files that are already formatted.
      run: |
        python -m black ./ --line-length 79 --check --diff --color \
        --include \
        **/*template*.py \
        docs/source/conf.py \
        mdtools/__init__.py \
        mdtools/_metadata.py \
        mdtools/file_handler.py \
        mdtools/numpy_helper_functions.py \
        mdtools/plot.py \
        mdtools/run_time_info.py \
        mdtools/version.py \
        scripts/discretization/plot_*.py \
        scripts/dynamics/plot_msd_layer*.py \
        scripts/structure/lig_change_at_pos_change_blocks.py \
        scripts/structure/plot_gmx_densmap.py \
        setup.py
    - name: Install/Upgrade flake8 and flake8-docstrings extension
      run: python -m pip install --user --upgrade flake8 flake8-docstrings
    - name: Lint code and docstrings with flake8
      # Use setup.cfg to configure flake8
      # TODO: The --select flag should be removed once all files are
      # revised to be compliant with flake8.  But as long as this is not
      # the case, select only those error codes that have been fixed in
      # all files.
      run: |
        python -m flake8 ./ --select=\
        E1,E2,E3,E4,E9,\
        F4,F7,F63,F82,\
        W1,W2,W3

  test:
    strategy:
      matrix:
        # Tests must be run on all target platforms and Python versions
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
      # Do not cancel in-progress jobs if any matrix job fails
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Export ${HOME}/.local/bin to ${PATH}
      # Executable Python binaries are ususally stored there
      run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
    - name: Get pip cache dir
      # pip's cache path depends on the operating system, see
      # https://github.com/actions/cache/blob/main/examples.md#python---pip
      # This requires pip >=20.1
      id: pip-cache
      run: |
        python -m pip install --user --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Create/Restore cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.pip-cache.outputs.dir }}/**
          ./docs/build/**
          ~/docs/build/**
          ./.pytest_cache/**
          ~/.pytest_cache/**
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ github.job }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}
          ${{ runner.os }}
    - name: Install/Upgrade setuptools and wheel
      run: python -m pip install --user --upgrade setuptools wheel
    - name: Test installation of MDTools
      run: |
        python -m pip install --user --upgrade .
        python -c "import mdtools"
        # Test import of all modules that must be loaded explicitly.
        python -c "import mdtools.plot"
    - name: Install/Upgrade requirements to build the documentation
      run: python -m pip install --user --upgrade -r docs/requirements.txt
    - name: Test build of the documentation
      run: make -C ./docs/ html
    - name: doctest
      # Because the default dtypes of NumPy arrays are different on
      # Windows, doctest will detect false failures.  See e.g.
      # https://stackoverflow.com/questions/36278590/numpy-array-dtype-is-coming-as-int32-by-default-in-a-windows-10-64-bit-machine
      if: ${{ runner.os != 'Windows' }}
      run: make -C ./docs/ doctest
    - name: Install/Upgrade PyTest
      run: python -m pip install --user --upgrade pytest
    - name: Test code with pytest
      run: python -m pytest ./
